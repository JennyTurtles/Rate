<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.sys.rate.mapper.GraduateStudentMapper">
    <resultMap id="BaseResultMap" type="org.sys.rate.model.GraduateStudent">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <id column="studentID" property="studentID" jdbcType="INTEGER"/>
        <result column="institutionID" jdbcType="INTEGER" property="institutionID" />
        <result column="stuNumber" property="stuNumber" jdbcType="VARCHAR"/>
        <result column="year" property="year"/>
        <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
        <result column="class" property="className" jdbcType="VARCHAR"/>
        <result column="tutorID" property="tutorID" jdbcType="INTEGER"/>
        <result column="studentType" property="studentType" jdbcType="VARCHAR"/>
        <result column="point" property="point" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="telephone" column="telephone" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result column="registerAnswer" property="registerAnswer" jdbcType="VARCHAR"/>
        <result column="registerQuestion" property="registerQuestion" jdbcType="VARCHAR"/>
        <association property="teachers" javaType="org.sys.rate.model.Teachers">
            <id property="ID" column="ID" jdbcType="INTEGER"/>
            <result property="name" column="tname"/>
            <result property="jobnumber" column="tjobnumber"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        select  ID, studentID,institutionID,stuNumber, year, tutorID,studentType,point,s.name,s.email,s.telephone,t.tname,t.tjobnumber
        from graduatestudent u,student s,teacher t
    </sql>

<!--    <select id="check" resultType="java.lang.Integer">-->
<!--        select exists (select * from student where IDNumber=#{IDNumber})-->
<!--    </select>-->

    <insert id="insert" parameterType="org.sys.rate.model.GraduateStudent">
        insert into graduatestudent (ID,studentID,institutionID,stuNumber,year,tutorID,studentType,point)
        values  (#{ID,jdbcType=INTEGER},
                 #{studentID,jdbcType=INTEGER},
                 #{institutionID,jdbcType=INTEGER},
                 #{stuNumber,jdbcType=VARCHAR},
                 #{year,jdbcType=VARCHAR}, #{tutorID,jdbcType=INTEGER},
                 #{studentType,jdbcType=VARCHAR},#{point,jdbcType=VARCHAR})
    </insert>
    <insert id="insertFROMImport" parameterType="org.sys.rate.model.GraduateStudent">
        insert into graduatestudent(ID,studentID,institutionID,stuNumber,year,tutorID,studentType,point, specialty, class) values
        <foreach collection="list" separator="," item="graduate">
               (#{graduate.ID,jdbcType=INTEGER},
                #{graduate.studentID,jdbcType=INTEGER},
                #{graduate.institutionID,jdbcType=INTEGER},
                #{graduate.stuNumber,jdbcType=VARCHAR},
                #{graduate.year,jdbcType=VARCHAR}, #{graduate.tutorID,jdbcType=INTEGER},
                #{graduate.studentType,jdbcType=VARCHAR},#{graduate.point,jdbcType=VARCHAR},#{graduate.specialty},#{graduate.className})
        </foreach>
    </insert>

    <update id="updateFROMImport" parameterType="org.sys.rate.model.GraduateStudent">
        <foreach collection="list" item="item" open="" close="" separator=";">
            update graduatestudent
            <set>
                <if test="item.year != null and item.year != ''">year = #{item.year},</if>
                <if test="item.tutorID != null and item.tutorID != ''">tutorID = #{item.tutorID},</if>
                <if test="item.specialty != null and item.specialty != ''">specialty = #{item.specialty},</if>
                <if test="item.className != null and item.className != ''">class = #{item.className},</if>
                <if test="item.studentType != null and item.studentType != ''">studentType = #{item.studentType},</if>
            </set>
            WHERE institutionID = #{item.institutionID} AND stuNumber = #{item.stuNumber}
        </foreach>
    </update>
    <select id="check" resultType="java.lang.Integer">
        select studentID
        from graduatestudent
        where studentID in
        <foreach collection="list" close=")" open="(" item="item" separator=",">
            #{item.studentID}
        </foreach>
    </select>
    <select id="getGraduateStudent" resultMap="BaseResultMap">
        select u.*,s.name,s.telephone,s.email,s.username,t.name as tname,t.jobnumber as tjobnumber
        from graduatestudent u
        left join teacher t
        on u.tutorID=t.ID
        left join student s
        on u.studentID=s.ID
    </select>
    <delete id="deleteGraduateStudent" parameterType="org.sys.rate.model.GraduateStudent">
        delete from graduatestudent where ID = #{ID}
    </delete>
    <update id="editGraduateStudent" parameterType="org.sys.rate.model.GraduateStudent">
        UPDATE student SET name=#{name,jdbcType=VARCHAR},
                           telephone=#{telephone,jdbcType=VARCHAR},
                           email=#{email,jdbcType=VARCHAR}
        where ID=#{studentID,jdbcType=INTEGER};
        UPDATE graduatestudent
        SET tutorID = #{tutorID},
            studentType = #{studentType},
            point = #{point}
        where ID=#{ID,jdbcType=INTEGER};
    </update>
    <update id="update">
        UPDATE graduatestudent SET tutorID=#{tutorID,jdbcType=INTEGER},
                                   stuNumber=#{stuNumber,jdbcType=VARCHAR},
                                 year=#{year,jdbcType=INTEGER},
                                 studentType=#{studentType,jdbcType=VARCHAR},
                                 specialty=#{specialty,jdbcType=VARCHAR},
                                 class=#{className,jdbcType=VARCHAR}
        where studentID=#{studentID,jdbcType=INTEGER};
    </update>
    <select id="getTeaNamesBySelect" resultType="org.sys.rate.model.Teachers">
        select t.*
        from teacher t
        <where>
            <if test="teaName != null and teaName != ''">and t.name LIKE CONCAT('%', #{teaName}, '%')</if>
        </where>
    </select>
<!--    管理员端学生列表筛选-->
    <select id="getGraduateStudentsBySelect" resultMap="BaseResultMap">
        select u.*,s.name,s.telephone,s.email,s.username,t.name as tname,t.jobnumber as tjobnumber
        from graduatestudent u
        left join teacher t
        on u.tutorID=t.ID
        left join student s
        on u.studentID=s.ID
        <where>
            <if test="year != null and year != 0">and u.year = #{year}</if>
            <if test="teaName != null and teaName != ''">and t.name LIKE CONCAT('%', #{teaName}, '%')</if>
        </where>
    </select>
<!--    老师端学生列表筛选-->
    <select id="getGraduateStudentsBySelectOfTeacher" resultMap="BaseResultMap">
        select u.*,s.name,s.telephone,s.email,s.username,t.name as tname,t.jobnumber as tjobnumber
        from graduatestudent u
        left join teacher t
        on u.tutorID=t.ID
        left join student s
        on u.studentID=s.ID
        <where>
            <if test="year != null and year != 0">and u.year = #{year}</if>
            and t.ID = #{tutorID}
        </where>
    </select>
    <select id="checkHaveStudentOfstudenID" resultType="java.lang.Integer">
        select exists (select * from graduatestudent where studentID = #{studentID})
    </select>
    <select id="checkHaveStudentOftutorID" resultType="java.lang.Integer">
        select exists (select * from graduatestudent where tutorID = #{tutorID} and ID != #{ID})
    </select>
    <select id="getGradByStuID" resultMap="BaseResultMap">
        select u.*,s.name,s.telephone,s.email,s.username,s.role,s.password,s.registerQuestion,s.registerAnswer
        from graduatestudent u,student s
        where u.studentID=#{studentID} and s.ID = u.studentID
    </select>

    <resultMap id="GraduateListMap" type="org.sys.rate.model.GraduateStudent">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <result column="stuNumber" property="stuNumber" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result column="studentType" property="studentType" jdbcType="VARCHAR"/>
        <result column="year" property="year" jdbcType="INTEGER"/>
        <result column="point" property="point" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="telephone" column="telephone" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="checkHaveStudentOfStuNumber" resultType="java.lang.Integer">
        select exists (select * from graduatestudent where institutionID = #{institutionID} and stuNumber = #{stuNumber} and studentID != #{studentID} )
    </select>
    <update id="updateWithInstitutionID" parameterType="org.sys.rate.model.GraduateStudent">
        UPDATE graduatestudent
        <set>
            <if test="year != null and year != ''">year = #{year},</if>
            <if test="tutorID != null and year != ''">tutorID = #{tutorID},</if>
            <if test="specialty != null and specialty != ''">specialty = #{specialty},</if>
            <if test="className != null and className != ''">class = #{className},</if>
            <if test="studentType != null and studentType != ''">studentType = #{studentType}</if>
        </set>
        WHERE institutionID = #{institutionID} AND stuNumber = #{stuNumber}
    </update>
</mapper>
