<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sys.rate.mapper.TeacherMapper">
  <resultMap id="BaseResultMap" type="org.sys.rate.model.Teacher">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="institutionID" jdbcType="INTEGER" property="institutionid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="IDNumber" jdbcType="VARCHAR" property="idnumber" />
    <result column="username"  jdbcType="VARCHAR" property="username"/>
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="deleteFlag" property="deleteFlag" jdbcType="BIT"/>
    <result column="role" property="role" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, username, institutionID, name, department, IDNumber, password,phone, email,deleteFlag,role
  </sql>
  <sql id="Column_ListWithActivities">
    ac.id as ACid, ac.name as ACname, ac.startDate, ac.scoreItemCount, ac.score,
      ac.groupCount, ac.expertCount, ac.participantCount,ac.status,
      g.ID as Gid,ex.groupID,g.name AS groupName
  </sql>
  <select id="getById" resultType="org.sys.rate.model.Teacher">
    select * from teacher
    where ID=#{ID}
  </select>

  <select id="getByEmail" resultType="org.sys.rate.model.Teacher">
    select * from teacher
    where email=#{email}
  </select>

  <!--  没写完-->
  <!--<sql id="Column_ListWithscore">-->

  <!--</sql>-->
  <select id="loadUserByUsername" resultMap="BaseResultMap">
    select * from teacher where username=#{username}
  </select>
  <select id="getTotalActivities" parameterType="Integer" resultType="java.lang.Long">
    select count(*) from expertactivities ex,teacher e
    where e.ID = #{id,jdbcType=INTEGER}
      and ex.teacherId = e.ID
      and ac.status='open'
  </select>

  <select id="selectByUsername" parameterType="String" resultType="java.lang.Integer">
    select e.ID
    from teacher e
    where e.username=#{expertUsername,jdbcType=VARCHAR}
  </select>
  <select id="selectNameById" resultType="String">
    select name
    from teacher
    where ID = #{expertID}
  </select>

<!--  <select id="loadUserByUsername" resultMap="BaseResultMap">-->
<!--    select t.ID, t.username, t.institutionID, t.name, t.department, t.IDNumber, t.password,t.phone, t.email from teacher t where t.username=#{username}-->
<!--  </select>-->
  <!--  <select id="getParticipates" parameterType="Integer" resultMap="org.sys.rate.model.Participates">-->

  <!--  </select>-->




  <select id="selectByPrimaryId" parameterType="Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from teacher
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <!--    <delete id="deleteByPrimaryKey" parameterType="org.sys.rate.model.ExpertsKey">-->
  <!--      delete from teacher-->
  <!--      where ID = #{id,jdbcType=INTEGER}-->
  <!--        and username = #{username,jdbcType=VARCHAR}-->
  <!--    </delete>-->
  <delete id="deleteById" parameterType="Integer">
    delete from teacher
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.sys.rate.model.Teacher">
    insert into teacher (ID, institutionID,
                         name, department, IDNumber, username,
                         password, phone, email
    )
    values (#{id,jdbcType=INTEGER},  #{institutionid,jdbcType=INTEGER},
            #{name,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{idnumber,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
           )
  </insert>
  <insert id="insertSelective" parameterType="org.sys.rate.model.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="institutionid != null">
        institutionID,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="idnumber != null">
        IDNumber,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="institutionid != null">
        #{institutionid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null">
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.institutionid != null">
        institutionID = #{record.institutionid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.idnumber != null">
        IDNumber = #{record.idnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set ID = #{record.id,jdbcType=INTEGER},
    username = #{record.username,jdbcType=VARCHAR},
    institutionID = #{record.institutionid,jdbcType=INTEGER},
    name = #{record.name,jdbcType=VARCHAR},
    department = #{record.department,jdbcType=VARCHAR},
    IDNumber = #{record.idnumber,jdbcType=VARCHAR},
    password = #{record.password,jdbcType=VARCHAR},
    phone = #{record.phone,jdbcType=VARCHAR},
    email = #{record.email,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.sys.rate.model.Teacher">
    update teacher
    <set>
      <if test="institutionid != null">
        institutionID = #{institutionid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null">
        IDNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
    and username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.sys.rate.model.Teacher">
    update teacher
    set institutionID = #{institutionid,jdbcType=INTEGER},
        name = #{name,jdbcType=VARCHAR},
        department = #{department,jdbcType=VARCHAR},
        IDNumber = #{idnumber,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="getTotal" resultType="org.sys.rate.model.Teacher">
    select count(*) from rate.teacher
    where deleteflag = 0;
  </select>


  <!-- <insert id="insert" parameterType="org.sys.rate.model.Teacher">
     insert into rate.teacher (name, jobnumber, email
     )
     values  (#{name,jdbcType=VARCHAR}, #{jobnumber,jdbcType=VARCHAR}, #{,jdbcType=VARCHAR},
              #{email,jdbcType=VARCHAR});
   </insert>-->

  <update id="delete" parameterType="org.sys.rate.model.Teacher">
    UPDATE rate.teacher SET deleteFlag = 1
    where rate.teacher.ID = #{id,jdbcType=INTEGER};
  </update>

  <update id="update" parameterType="org.sys.rate.model.Student">
    UPDATE teacher SET name=#{name,jdbcType=VARCHAR},
                            jobnumber=#{jobnumber,jdbcType=VARCHAR},
                            phone=#{phone,jdbcType=VARCHAR},
                            email=#{email,jdbcType=VARCHAR}
    where ID=#{id,jdbcType=INTEGER};
  </update>
  <select id="check" resultType="INTEGER">
    select COUNT(*)
    from scores
    where expertID = #{eID} and activityID = #{aID} and participantID = #{pID} and scoreItemID = #{sID}
  </select>
</mapper>
