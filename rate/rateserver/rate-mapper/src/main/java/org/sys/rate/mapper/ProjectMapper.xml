<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sys.rate.mapper.ProjectMapper">
    <resultMap type="org.sys.rate.model.Project" id="ProjectResult">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="studentId" column="student_id" jdbcType="INTEGER"/>
        <result property="name" column="name"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="author" column="author"/>
        <result property="url" column="url"/>
        <result property="state" column="state"/>
        <result property="point" column="point"/>
        <result property="rank" column="rank"/>
        <result property="total" column="total"/>
        <result property="projectTypeId" column="project_type_id"/>
        <association property="student" javaType="org.sys.rate.model.Student">
            <id property="ID" column="ID" jdbcType="INTEGER"/>
            <result property="name" column="sname"/>
        </association>
        <association property="indicator" javaType="org.sys.rate.model.Indicator">
            <id property="id" column="indicatorid" jdbcType="INTEGER"/>
            <result property="name" column="iname"/>
            <result property="score" column="score"/>
        </association>
        <association property="projectType" javaType="org.sys.rate.model.ProjectType">
            <id property="id" column="projectTypeId" jdbcType="INTEGER"/>
            <result property="name" column="tname"/>
            <result property="year" column="year"/>
            <result property="indicatorId" column="indicator_id"/>
        </association>
        <collection property="operationList" ofType="org.sys.rate.model.Operation">
            <result property="operatorRole" column="operator_role"/>
            <result property="operatorId" column="operator_id"/>
            <result property="operatorName" column="operator_name"/>
            <result property="prodType" column="prod_type"/>
            <result property="prodId" column="prod_id"/>
            <result property="time" column="operdate"/>
            <result property="operationName" column="operation_name"/>
            <result property="state" column="state"/>
            <result property="remark" column="remark"/>
        </collection>
    </resultMap>

    <sql id="selectProjectVo">
        select id, student_id, name, author, url, project_type_id, state, start_date, end_date, point, rank, total
        from i_project
    </sql>

    <select id="selectAllProjectList" resultMap="ProjectResult">
        SELECT p.*,i.max_date,j.remark
        FROM i_project p
                 JOIN (
            SELECT prod_id,MAX(date) max_date
            FROM i_oper
            WHERE prod_type = '科研项目'
            GROUP BY prod_id
        ) i ON p.id = i.prod_id
                 JOIN (
            SELECT prod_id,remark,`date`
            FROM i_oper
            WHERE prod_type = '科研项目'
        ) j ON i.prod_id = j.prod_id AND i.max_date = j.`date`
                 JOIN i_project_type type ON p.project_type_id = type.id
                 JOIN student s ON s.ID = p.student_id
                JOIN indicator i ON i.id = type.indicator_id
        ORDER BY p.id DESC;
        -- 老师查询所有学生的获奖
--         SELECT p.*,
--                s.name as sname,
--                i.name as iname,
--                i.score,
--                oper.operator_role,oper.operator_id,oper.operator_name,oper.prod_type,oper.prod_id,oper.date as operdate,oper.operation_name,
--                oper.state,oper.remark,
--                type.name as tname,type.year,type.indicator_id
--         FROM i_project p
--                  LEFT JOIN i_project_type type ON type.id = p.project_type_id
--                  LEFT JOIN student s ON p.student_id = s.ID
--                  LEFT JOIN indicator i ON i.id = p.indicator_id
--                  LEFT JOIN i_oper oper ON p.id = oper.prod_id and oper.prod_type = '科研项目'
    </select>

    <select id="selectListById" resultMap="ProjectResult">
        <include refid="selectProjectVo"></include>
        <where>
            <if test="student_id != null  and student_id != ''">and student_id = #{student_id}</if>
            <if test="page !=null and size!=null">
                limit #{page},#{size}
            </if>
        </where>
    </select>

<!--    学生科研项目页面初始化-->
    <select id="selectProjectListById" resultMap="ProjectResult">
        SELECT a.*,i.max_date,j.remark,ip.`name` as tname, ip.id as projectTypeId, ip.year, ip.indicator_id, i.id as indicatorid, i.score, i.name as iname
        FROM i_project a
                 JOIN (
            SELECT prod_id,MAX(i_oper.date) max_date
            FROM i_oper
            WHERE prod_type = '科研项目'
            GROUP BY prod_id
        ) i ON a.id = i.prod_id
                 JOIN (
            SELECT prod_id,remark,`date`
            FROM i_oper
            WHERE prod_type = '科研项目'
        ) j ON i.prod_id = j.prod_id AND i.max_date = j.`date`
                 JOIN i_project_type ip ON a.project_type_id = ip.id AND a.student_id = #{studentID}
                 JOIN indicator i ON i.id = ip.indicator_id
        ORDER BY a.id DESC;
    </select>

    <select id="selectProjectList" parameterType="org.sys.rate.model.Project" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        <where>
            <if test="id !=null and id !=''">and id =#{id}</if>
            <if test="student_id != null ">and student_id = #{student_id}</if>
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="year != null  and year != ''">and year = #{year}</if>
            <if test="month != null ">and month = #{month}</if>
            <if test="`rank` != null ">and `rank` = #{rank}</if>
            <if test="total != null ">and total = #{total}</if>
            <if test="point != null ">and point = #{point}</if>
            <if test=" != null ">and  = #{}</if>
            <if test="url != null ">and url = #{url}</if>
        </where>
    </select>

    <select id="selectProjectById" parameterType="Long" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        where id = #{id}
    </select>

    <insert id="insertProject" parameterType="org.sys.rate.model.Project" useGeneratedKeys="true" keyProperty="id">
        insert into i_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="studentId != null">student_id,</if>
            <if test="projectTypeId != null">project_type_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="startDate != null">start_date,</if>
            end_date,
            <if test="author != null">author,</if>
            <if test="`rank` != null">`rank`,</if>
            <if test="total != null">total,</if>
            <if test="point != null">point,</if>
            <if test="state != null">state,</if>
            <if test="url != null">url</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="studentId != null">#{studentId},</if>
            <if test="projectTypeId != null">#{projectTypeId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="startDate != null">#{startDate},</if>
            #{endDate},
            <if test="author != null">#{author},</if>
            <if test="`rank` != null">#{rank},</if>
            <if test="total != null">#{total},</if>
            <if test="point != null">#{point},</if>
            <if test="state != null">#{state},</if>
            <if test="url != null">#{url}</if>
        </trim>
    </insert>

    <update id="updateProject" parameterType="org.sys.rate.model.Project">
        update i_project
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="startDate != null">start_date = #{startDate},</if>
            end_date = #{endDate},
            <if test="author != null">author = #{author},</if>
            <if test="`rank` != null">`rank` = #{rank},</if>
            <if test="total != null">total = #{total},</if>
            <if test="point != null">point = #{point},</if>
            <if test="state != null">state =#{state},</if>
            <if test="url != null">url = #{url},</if>
            <if test="projectTypeId != null">project_type_id = #{projectTypeId}</if>
        </trim>
        where id = #{id}
    </update>

    <update id="editState" parameterType="org.sys.rate.model.Project">
        update i_project
        <trim prefix="SET" suffixOverrides=",">
            <if test="state != null">state = #{state},</if>
        </trim>
        where id = #{ID}
    </update>
    <delete id="deleteProjectById" parameterType="Long">
        delete
        from i_project
        where id = #{ID}
    </delete>

    <delete id="deleteProjectByIds" parameterType="String">
        delete from i_project where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{ID}
        </foreach>
    </delete>
    <select id="searchProjectByConditions" resultMap="ProjectResult">
        SELECT book.*,i.max_date,j.remark,ip.`name` as tname, ip.id as projectTypeId, ip.year, ip.indicator_id, s.name as sname
        FROM i_project book
        JOIN (
        SELECT prod_id,MAX(i_oper.date) max_date
        FROM i_oper
        WHERE prod_type = '科研项目'
        GROUP BY prod_id
        ) i ON book.id = i.prod_id
        JOIN (
        SELECT prod_id,remark,`date`
        FROM i_oper
        WHERE prod_type = '科研项目'
        ) j ON i.prod_id = j.prod_id AND i.max_date = j.`date`
        JOIN i_project_type ip ON book.project_type_id = ip.id
        JOIN student s ON s.ID = book.student_id
        <where>
            <if test="projectName != null and projectName != ''">and book.name like concat('%', #{projectName}, '%')</if>
            <if test="studentName != null and studentName != ''">and s.name like concat('%', #{studentName}, '%')</if>
            <if test="state != null and state != ''">and book.state = #{state}</if>
            <if test="pointFront != null and pointBack != null and pointFront != '' and pointBack != ''">and book.point between #{pointFront} and #{pointBack}</if>
        </where>
        ORDER BY book.id DESC
    </select>

    <select id="selectProjectListByYear" resultType="org.sys.rate.model.Project"></select>
    <select id="selectProjectNumberOfPendingMessing" resultType="Integer">
        select count(*)
        from i_project
        where state = 'tea_pass'
    </select>
</mapper>
