<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sys.rate.mapper.DoctorMapper">
    <resultMap id="BaseResultMap" type="org.sys.rate.model.Doctor">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <id column="studentID" property="studentID" jdbcType="INTEGER"/>
        <result column="institutionID" jdbcType="INTEGER" property="institutionID" />
        <result column="stuNumber" property="stuNumber" jdbcType="VARCHAR"/>
        <result column="year" property="year" jdbcType="INTEGER"/>
        <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
        <result column="class" property="className" jdbcType="VARCHAR"/>
        <result column="tutorID" property="tutorID" jdbcType="INTEGER"/>
        <result column="studentType" property="studentType" jdbcType="VARCHAR"/>
        <result column="point" property="point" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="telephone" column="telephone" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <association property="teachers" javaType="org.sys.rate.model.Teachers">
            <id property="ID" column="ID" jdbcType="INTEGER"/>
            <result property="name" column="tname"/>
            <result property="jobnumber" column="tjobnumber"/>
        </association>
    </resultMap>
    <update id="update">
        UPDATE doctor SET tutorID=#{tutorID,jdbcType=INTEGER},
                             stuNumber=#{stuNumber,jdbcType=VARCHAR},
                             year=#{year,jdbcType=INTEGER},
                             studentType=#{studentType,jdbcType=VARCHAR},
                             specialty=#{specialty,jdbcType=VARCHAR},
                             class=#{className,jdbcType=VARCHAR}
        where studentID=#{studentID,jdbcType=INTEGER};
    </update>
    <select id="getDoctorStudents" resultMap="BaseResultMap">
        select u.*,s.name,s.telephone,s.email,s.username,t.name as tname,t.jobnumber as tjobnumber
        from doctor u
        left join teacher t
        on u.tutorID=t.ID
        left join student s
        on u.studentID=s.ID
    </select>
    <insert id="insertFROMImport" parameterType="org.sys.rate.model.Doctor">
        insert into doctor(ID,studentID,institutionID,stuNumber,year,tutorID,studentType,point, specialty, class) values
        <foreach collection="list" separator="," item="doctor">
            (#{doctor.ID,jdbcType=INTEGER},
            #{doctor.studentID,jdbcType=INTEGER},
            #{doctor.institutionID,jdbcType=INTEGER},
            #{doctor.stuNumber,jdbcType=VARCHAR},
            #{doctor.year,jdbcType=VARCHAR}, #{doctor.tutorID,jdbcType=INTEGER},
            #{doctor.studentType,jdbcType=VARCHAR},#{doctor.point,jdbcType=VARCHAR},#{doctor.specialty},#{doctor.className})
        </foreach>
    </insert>
    <update id="updateFROMImport" parameterType="org.sys.rate.model.Doctor">
        <foreach collection="list" item="item" open="" close="" separator=";">
            update doctor
            <set>
                <if test="item.year != null and item.year != ''">year = #{item.year},</if>
                <if test="item.tutorID != null and item.tutorID != ''">tutorID = #{item.tutorID},</if>
                <if test="item.specialty != null and item.specialty != ''">specialty = #{item.specialty},</if>
                <if test="item.className != null and item.className != ''">class = #{item.className},</if>
                <if test="item.studentType != null and item.studentType != ''">studentType = #{item.studentType},</if>
            </set>
            WHERE institutionID = #{item.institutionID} AND stuNumber = #{item.stuNumber}
        </foreach>
    </update>
    <select id="getDoctorsBySelect" resultMap="BaseResultMap">
        select u.*,s.name,s.telephone,s.email,s.username,t.name as tname,t.jobnumber as tjobnumber
        from doctor u
        left join teacher t
        on u.tutorID=t.ID
        left join student s
        on u.studentID=s.ID
        <where>
            <if test="year != null and year != 0">and u.year = #{year}</if>
            <if test="teaName != null and teaName != ''">and t.name LIKE CONCAT('%', #{teaName}, '%')</if>
        </where>
    </select>
    <delete id="deleteDoctorStudent" parameterType="org.sys.rate.model.Doctor">
        delete from doctor where ID = #{ID}
    </delete>
    <update id="editDoctorStudent" parameterType="org.sys.rate.model.Doctor">
        UPDATE student SET name=#{name,jdbcType=VARCHAR},
                           telephone=#{telephone,jdbcType=VARCHAR},
                           email=#{email,jdbcType=VARCHAR}
        where ID=#{studentID,jdbcType=INTEGER};
        UPDATE doctor
        SET tutorID = #{tutorID}
        where ID=#{ID,jdbcType=INTEGER};
    </update>
    <select id="getDoctorStudentsBySelectOfTeacher" resultMap="BaseResultMap">
        select u.*,s.name,s.telephone,s.email,s.username,t.name as tname,t.jobnumber as tjobnumber
        from doctor u
        left join teacher t
        on u.tutorID=t.ID
        left join student s
        on u.studentID=s.ID
        <where>
            <if test="year != null and year != 0">and u.year = #{year}</if>
            and t.ID = #{tutorID}
        </where>
    </select>

</mapper>
