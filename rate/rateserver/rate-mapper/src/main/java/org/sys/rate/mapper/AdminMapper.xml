<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.sys.rate.mapper.AdminMapper">
    <resultMap id="BaseResultMap" type="org.sys.rate.model.Admin">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <result column="companyName" property="companyName" jdbcType="VARCHAR"/>
        <result column="institutionID" property="institutionID" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="HrWithRoles" type="org.sys.rate.model.Admin" extends="BaseResultMap">
        <collection property="roles" ofType="org.sys.rate.model.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
            <result column="rnameZh" property="nameZh"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    ID, companyName,institutionID,name, phone, email, enabled, username, password, role, comment
  </sql>
    <select id="getAllHrsExceptCurrentHr" resultMap="BaseResultMap">
        select * from admin where ID !=#{id};
    </select>
    <select id="getAdminInfo" resultMap="BaseResultMap">
        select * from admin where ID = #{id};
    </select>

    <select id="getAllHrs" resultMap="HrWithRoles">
        select admin.id, insti.company as companyName, admin.institutionID,admin.name, admin.phone, admin.email, admin.username, admin.comment,admin.enabled,r.`id` as rid,r.`name` as rname,r.`nameZh` as rnameZh
        from admin
        left join institution insti
        on admin.`institutionID`=insti.`id`
        left join hr_role hrr
        on admin.`id`=hrr.`hrid`
        left join role r on hrr.`rid`=r.`id`
        where admin.`id`!=#{hrid}
        and admin.role = 1
        <if test="keywords!=null">
            and insti.company like concat('%',#{keywords},'%')
        </if>
        and admin.enabled = 1
        order by admin.id
        <if test="page !=null and size!=null">
        limit #{page},#{size}
        </if>
    </select>

    <select id="getTotal" resultType="java.lang.Long">
        select count(*) from admin e
        left join institution insti
        on e.`institutionID`=insti.`id`
        where e.enabled = 1
        and e.role = 1
            <if test="keywords!=null">
                and insti.company like concat('%',#{keywords},'%')
            </if>
    </select>

    <select id="getTotalByAdvancedMethod" resultType="java.lang.Long">
        select count(*) from admin e
        left join institution insti
        on e.`institutionID`=insti.`id`
        where e.enabled = 1
        and e.role = 1
        <if test="keywords!=null">
            and insti.`company` like concat('%',#{keywords},'%')
        </if>
        <if test="keywords_name!=null">
            and e.name like concat('%',#{keywords_name},'%')
        </if>
    </select>
    <select id="getAllAdsByAdvancedMethod" resultMap="HrWithRoles">
        select admin.id, insti.company as companyName, admin.institutionID,admin.name, admin.phone, admin.email, admin.username, admin.comment,admin.enabled from admin
        left join institution insti
        on admin.`institutionID`=insti.`id`
        where
         admin.role = 1
        <if test="keywords!=null">
            and insti.company like concat('%',#{keywords},'%')
        </if>
        <if test="keywords_name!=null">
            and admin.name like concat('%',#{keywords_name},'%')
        </if>
        and enabled = 1
        order by admin.id
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>
    <update id="delete" parameterType="org.sys.rate.model.Admin">
        UPDATE Admin SET enabled = 0
        where username = #{username,jdbcType=VARCHAR}
    </update>
    <update id="update" parameterType="org.sys.rate.model.Admin">
        UPDATE Admin SET institutionID=#{institutionID,jdbcType=INTEGER},
                         name=#{name,jdbcType=VARCHAR},
                         phone=#{phone,jdbcType=VARCHAR},
                         email=#{email,jdbcType=INTEGER},
                         username=#{username,jdbcType=INTEGER},
                         comment=#{comment,jdbcType=VARCHAR}
        where ID=#{ID,jdbcType=INTEGER}
    </update>




    <select id="getAdminRolesById" resultType="org.sys.rate.model.Role">
    select r.* from role r,admin a where a.`role`=r.`id` and a.`id`=#{id}
  </select>
    <select id="loadUserByUsername" resultMap="BaseResultMap">
    select * from admin where username=#{username}
  </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from admin
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hr
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.sys.rate.model.Admin" useGeneratedKeys="true" keyProperty="ID">
    insert into admin (ID, institutionID,name, phone, email, enabled, username, password, role, comment)
    values (#{ID,jdbcType=INTEGER},
            #{institutionID,jdbcType=INTEGER},
            #{name,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR},
      #{email,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT},
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR},
      #{comment,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="org.sys.rate.model.Admin">
        insert into hr
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userface != null">
                userface,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=CHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userface != null">
                #{userface,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="org.sys.rate.model.Admin">
        update admin
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateUserface">
        update admin set userface = #{url} where id=#{id};
    </update>
    <update id="updatePasswd">
        update admin set password = #{encodePass} where id=#{adminid};
    </update>
    <update id="updateByPrimaryKey" parameterType="org.sys.rate.model.Admin">
    update admin
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userface = #{userface,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
